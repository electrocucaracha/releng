---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2021
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

name: Check CI
# yamllint disable-line rule:truthy
on:
  push:
    paths:
      - '**.sh'
      - '**.yml'
      - '**.conf'
      - '**.txt'
  pull_request:
    paths:
      - '**.sh'
      - '**.yml'
      - '**.conf'
      - '**.txt'
  pull_request_review:
    types:
      - submitted

jobs:
  check-ci-baremetal:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - ci: concourse
            k8s: kind
          - ci: tekton
            k8s: krd
    env:
      PKG_KUBECTL_VERSION: v1.20.7
      RELENG_CI_TYPE: ${{ matrix.ci }}
      RELENG_K8S_TYPE: ${{ matrix.k8s }}
    steps:
      - uses: actions/checkout@v2
      - name: Provision a Kubernetes cluster
        run: cd ci; "./provision_${RELENG_K8S_TYPE}_cluster.sh"
      - name: Deploy CI services
        run: cd "ci/${RELENG_CI_TYPE}"; ./deploy.sh
      - name: Get nodes information
        run: kubectl describe nodes
  check-mirror-baremetal:
    runs-on: ubuntu-20.04
    env:
      MIRROR_FILENAME: mirror_releng.list
    steps:
      - uses: actions/checkout@v2
      - name: Setup the VM folders
        run: |
          ./pre-install.sh "sdc" "/var/local/packages"
          ./pre-install.sh "sdd" "/var/local/images"
          ./pre-install.sh "sdf" "/var/local/pypi_packages"
      - name: Install dependencies
        run: cd mirror; ./install.sh
      - name: Deploy docker compose services
        run: cd mirror; ./deploy.sh
      - name: Pull KinD docker images
        run: cd mirror; ./setup_k8s.sh
      - name: Pull DevPi packages
        env:
          RELENG_FOLDER: "../"
        run: cd mirror; ./setup_devpi.sh
      - name: Retrieve images hosted in private registry
        run: curl -s -X GET http://localhost:5000/v2/_catalog
      - name: Check logs
        if: failure()
        run: docker-compose -f mirror/docker-compose.yml logs
  check-e2e:
    runs-on: macos-10.15
    env:
      VAGRANT_DISABLE_VBOXSYMLINKCREATE: 1
      VAGRANT_EXPERIMENTAL: disks
      RELENG_K8S_TYPE: kind
    steps:
      - uses: actions/checkout@v2
      - name: Cache Vagrant boxes
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-
      - name: Install GNU tools
        run: brew install proctools iproute2mac
      - name: Replace shorten links
        run: find . -type f -iname "*sh" -exec sed -i '.bak' 's|http://bit.ly/install_pkg|https://raw.githubusercontent.com/electrocucaracha/pkg-mgr_scripts/master/install.sh|g' {} \;
      - name: Run mirror
        run: vagrant up mirror
        env:
          RELENG_KOLLA_BUILD: "true"
      - name: Create CI instance
        run: vagrant up ci
        env:
          CPUS: 1
          MEMORY: 4096
      - name: Destroy CI instance
        if: ${{ always() }}
        run: vagrant destroy -f ci
      - name: Create cloud instance
        run: vagrant up cloud
        env:
          CPUS: 1
          MEMORY: 8192
      - name: Destroy Cloud instance
        if: ${{ always() }}
        run: vagrant destroy -f cloud
      - name: Check HW resources
        if: failure()
        run: |
          vm_stat
          top -l 1 -n 0
          VBoxManage list runningvms --long
